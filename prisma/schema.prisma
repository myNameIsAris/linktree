// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  username String @unique
  fullname String
  password String
  role Int
  email String @unique
  token String?
  created_at DateTime @default(now())
  update_at DateTime @updatedAt
  is_deleted Boolean @default(false)
  
  posts Posts[]
}

model ForgetPassword {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  token String @unique
  created_at DateTime @default(now())
}

model Posts {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  url String
  created_at DateTime @default(now())
  update_at DateTime @updatedAt
  is_deleted Boolean @default(false)
  links Links[]
  activity Posts_activity[]

  user Users @relation(fields: [id_user], references: [id], onDelete: Cascade)
  id_user String @db.ObjectId
}

model Links {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  link String
  created_at DateTime @default(now())
  update_at DateTime @updatedAt
  is_deleted Boolean @default(false)
  activity Links_activity[]

  post Posts @relation(fields: [id_post], references: [id], onDelete: Cascade)
  id_post String @db.ObjectId
}

model Posts_activity {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  created_at DateTime
  
  post Posts? @relation(fields: [id_post], references: [id], onDelete: SetNull)
  id_post String? @db.ObjectId
}

model Links_activity {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  created_at DateTime
  
  link Links? @relation(fields: [id_link], references: [id], onDelete: SetNull)
  id_link String? @db.ObjectId
}