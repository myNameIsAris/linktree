<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style/dashboard.css">
    <script src="https://kit.fontawesome.com/524dd30d0c.js" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.0/chart.umd.js"></script>
  </head>
  <title>Admin | Artree</title>
  <body>

    <div class="sidenav">
      <h1>Artree</h1>
      <% if (user.role === 1) { %>
        <a href="/admin">Admin</a>
        <% } else { %>
        <a href="/dashboard">Dashboard</a>
      <% } %>
      <a href="/link">Link</a>
      <a href="/profile">Profile</a>
      <a href="/logout">Logout</a>
    </div>
    
    <div class="container">

      <div class="welcome">
        <h1>Selamat Datang <%= user.fullname %></h1>
        <span>Buat Postmu Sekarang</span>
      </div>np

      <div class="container-stats">
        <h1>Jumlah Pengunjung Artree</h1>
        <canvas id="stats-visit"></canvas>
      </div>

      <div class="card-container">
        <div class="card">
          <div class="card-top">
            <i class="fa-solid fa-newspaper"></i>
            <span>JUMLAH POST</span>
          </div>
          <h1><%= count.postCount %></h1>
        </div>
        <div class="card">
          <div class="card-top">
            <i class="fa-solid fa-link"></i>
            <span>JUMLAH LINK</span>
          </div>
          <h1><%= count.linkCount %></h1>
        </div>
        <div class="card">
          <div class="card-top">
            <i class="fa-solid fa-users"></i>
            <span>JUMLAH PENGUNJUNG</span>
          </div>
          <h1><%= count.viewer %></h1>
        </div>
      </div>

      <div class="footer">
        <span style="font-size: larger; font-weight: bolder;">Copyright By Aris</span>
        <span>Sejak Tahun 2023</span>
      </div>
    </div>

  </body>

  <script>
    (async () => {
      // const colors = ['darkgrey', 'white', 'red']
      const result = await fetchJSON('/post-activity/all')
      
      let labels = []
      const colors = []
      const datasets = []

      // Create Label
      for (const d of result.data) {
        const time = new Date(d.created_at)
        const convTime = time.getDate() + '-' + (time.getMonth() + 1) + '-' + time.getFullYear()
        labels.push(convTime)
        datasets.push(d._count)
      }

      const data = {
        labels: labels,
        // datasets: datasets
        datasets: [
          {
            label: 'Pengunjung',
            data: datasets,
            fill: true,
            // backgroundColor: 'rgba(255, 255, 255, 0.1)',
            borderColor: generateRandomHexColor(),
            tension: .2
          },
        ]
      }
      const plugin = {
        id: 'customCanvasBackgroundColor',
        beforeDraw: (chart, args, options) => {
          const {ctx} = chart;
          ctx.save();
          ctx.globalCompositeOperation = 'destination-over';
          ctx.fillStyle = options.color || '#99ffff';
          ctx.fillRect(0, 0, chart.width, chart.height);
          ctx.restore();
        }
      };
      const config = {
        type: 'line',
        data: data,
        options : {
          scales: {
            y: {
              min: 0,
              title : {
                text : 'Pengunjung Tiap Hari',
                display : true
              }
            },
          },
          plugins: {
            customCanvasBackgroundColor: {
              color: '#212121',
            }
          }
        },
        // plugins: [plugin],
      }

      const chart = new Chart(document.querySelector('#stats-visit'), config)
    })()
    const labels = []
    const datasets = []
    for (let i = 1; i <= 30; i++) {
      labels.push(i)
    }
    for (let i = 1; i <= 30; i++) {
      datasets.push(generateRandomNumber(0, 100))
    }
    // const data = {
    //   labels: labels,
    //   datasets: [
    //     {
    //       label: 'Pengunjung',
    //       data: datasets,
    //       fill: true,
    //       backgroundColor: 'rgba(255, 255, 255, 0.1)',
    //       borderColor: '#fffeff',
    //       tension: .2
    //     },
    //   ]
    // }
    // const plugin = {
    //   id: 'customCanvasBackgroundColor',
    //   beforeDraw: (chart, args, options) => {
    //     const {ctx} = chart;
    //     ctx.save();
    //     ctx.globalCompositeOperation = 'destination-over';
    //     ctx.fillStyle = options.color || '#99ffff';
    //     ctx.fillRect(0, 0, chart.width, chart.height);
    //     ctx.restore();
    //   }
    // };
    // const config = {
    //   type: 'line',
    //   data: data,
    //   options : {
    //     scales: {
    //       y: {
    //         min: 0,
    //         title : {
    //           text : 'Pengunjung Tiap Hari',
    //           display : true
    //         }
    //       },
    //     },
    //     plugins: {
    //       customCanvasBackgroundColor: {
    //         color: '#212121',
    //       }
    //     }
    //   },
    //   // plugins: [plugin],
    // }

    // const chart = new Chart(document.querySelector('#stats-visit'), config)

    function generateRandomNumber(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    function generateRandomHexColor() {
      return '#' + Math.floor(Math.random()*16777215).toString(16);
    }

    async function fetchJSON(url, options = {}) {
      const URLS = new URL(window.location.href)
      const BASEURL = URLS.protocol + '//' + URLS.hostname + (URLS.port ? ':' + URLS.port : '') + '/api'
      console.log(BASEURL)
      options.headers = {
            'Content-Type': 'application/json',
      }
      try {
          const response = await fetch(BASEURL + url, options)
          if (!response.ok) {
              const data = await response.json()
              return alert(data.msg)
          }
          const data = await response.json()
          return data
      } catch (error) {
          console.log(error)
      }
    }
  </script>
</html>